name: Release Build and Publish

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          corepack enable
          corepack prepare pnpm@latest --activate
          pnpm install

      - name: Run build
        run: pnpm exec node build.mjs

      - name: Prepare release assets
        run: |
          mkdir -p "${{ runner.temp }}/release"
          cp -r dist "${{ runner.temp }}/release/"
          cp package.json "${{ runner.temp }}/release/"
          cp README.md "${{ runner.temp }}/release/"

      - name: Zip dist directory
        run: |
          cd "${{ runner.temp }}/release"
          zip -r dist.zip dist

      - name: Determine version
        id: vars
        run: echo "version=$(node -p \"require('./package.json').version\")" >> $GITHUB_OUTPUT

      - name: Create Git tag
        env:
          VERSION: ${{ steps.vars.outputs.version }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -f "v${VERSION}"
          git push -f origin "v${VERSION}"

      - name: Create or update GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.vars.outputs.version }}
          name: Release v${{ steps.vars.outputs.version }}
          body: |
            Automated release of version v${{ steps.vars.outputs.version }}.
          draft: false
          prerelease: false
          files: |
            ${{ runner.temp }}/release/dist.zip
            ${{ runner.temp }}/release/package.json
            ${{ runner.temp }}/release/README.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
